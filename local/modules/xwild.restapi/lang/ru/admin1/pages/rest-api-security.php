<?php
    $MESS = [
        'XwildRestTokenField'     => 'API-токен', 'XwildRestTokenFieldExpire' => 'Срок годности API-токена',

        // Security page
        'XwildRestSecurityPageTitle' => 'Безопасность',
        'XwildRestTabAuthorizationTitle' => 'Авторизация',
        'XwildRestTabRequestLimitTitle' => 'Ограничение количества запросов',
        'XwildRestTabFiltersTitle' => 'Фильтры',
        'XwildRestUseToken' => 'Авторизация по токену',
        'XwildRestUseTokenHint' => 'Если параметр активен, тогда при запросе будет проверяться наличие токена в "белом" списке роута, иначе в базе данных.<br><br><b>Внимание</b>:<br>1. При активации параметра, пользователю будут добавлены Пользовательские поля <b>#FIELD_NAME_REST_API_TOKEN#</b>, <b>#FIELD_NAME_REST_API_TOKEN_EXPIRE#</b>;<br>2. Важно, чтобы при запросе со стороны клиента был отправлен заголовок Authorization-Token.',
        'XwildRestTokenKey' => 'Ключевая фраза токена',
        'XwildRestTokenKeyHint' => 'Ключевая фраза является дополнением к токену пользователя. Пример: Authorization-Token: {KEYWORD}:{TOKEN}',
        'XwildRestTokenLifetime' => 'Срок жизни токена',
        'XwildRestTokenLifetimeHint' => 'Срок жизни токена с момента его создания. Указывается в секундах. По умолчанию срок годности токена 3 года.<br><br>Параметр применяется при генерации токена.',
        'XwildRestTokenFieldCode' => 'Код поля для хранения токена',
        'XwildRestTokenFieldCodeNotFound' => 'Поле для хранения токена с кодом \'#REST_API_TOKEN_FIELD_CODE#\' не найдено',
        'XwildRestTokenFieldCodeHint' => 'Код пользовательского поля для хранения токена.<br><br>По умолчанию используется #REST_API_TOKEN_FIELD_CODE#.<br><br>В случае указания собственного поля, поле по умолчанию удалено не будет.',
        'XwildRestGenerateToken' => 'Сгенерировать токены',
        'XwildRestGenerateTokenHint' => 'Если включена авторизация по токену, тогда при клике на ссылку будут сгенерированы токены для тех пользователей, у которых они отсутствуют. При указании собственного поля для токена, оно также будет учтено.',
        'XwildRestGenerateTokenLinkText' => 'Выполнить',
        'XwildRestExample' => 'Пример заголовка',
        'XwildRestExampleHint' => 'Токен, который должен быть передан в заголовке запроса.',
        'XwildRestExampleToken' => 'Authorization-Token: #KEYWORD##TOKEN#',
        'XwildRestTokenGenerated' => 'Сгенерировано токенов: #COUNT#',
        'XwildRestTokenNotGenerated' => 'Токены не были сгенерированы',
        'XwildRestUseRequestLimit' => 'Ограничение запросов',
        'XwildRestUseRequestLimitHint' => 'Если параметр активен, тогда при запросе будет проверяться количество выполненных запросов от конкретного токена.<br><br>Если количество запросов превышает максимально допустимое количество в единицу времени, тогда доступ для токена будет ограничен.<br><br>Необходима авторизация по токену.',
        'XwildRestNoteNotEnoughGroups' => 'Отсутствуют группы доступные для манипулирования. <a href="group_edit.php?lang=#LANG#">Добавить группу</a>',
        'XwildRestGroup' => 'Группа',
        'XwildRestGroupHint' => 'Группа для которой будет применяться ограничение.',
        'XwildRestNumber' => 'Количество',
        'XwildRestNumberHint' => 'Максимально допустимое количество запросов для токена относящегося к группе.<br><br>Если токен имеет отношение к нескольким группам, тогда приоритет отдается группе с наибольшим количеством запросов.',
        'XwildRestPeriod' => 'Период (сек)',
        'XwildRestPeriodHint' => 'Период подсчета количества запросов. Задается в секундах.<br><br>Например, задано 3600 секунд, то есть 1 час, значит количество запросов будет рассчитываться за последний час.',
        'XwildRestUseLoginPassword' => 'Авторизация по логину и паролю',
        'XwildRestUseLoginPasswordHint' => 'Если параметр активен, тогда при запросе будет проверяться наличие пользователя в базе по указанным логину и паролю.<br><br>Внимание: важно чтобы при запросе со стороны клиента были отправлены заголовки Authorization-Login и Authorization-Password.',
        'XwildRestUseCorsFilter' => 'Кросс-доменные запросы',
        'XwildRestUseCorsFilterHint' => 'Если параметр включён, тогда при обработке входящего запроса будет проверяться домен источника запроса.',
        'XwildRestCorsListDomains' => 'Список доменов',
        'XwildRestCorsListDomainsHint' => 'Список разрешенных доменов, с которых API-интерфейс будет обрабатывать входящие запросы.<br>Домены нужно писать через точку с запятой.<br><br>Пример: http://site1.com; http://site2.com<br><br>Можно указать символ Звёздочка (*), в этом случае интерфейс будет доступен всем доменам.',
    ];